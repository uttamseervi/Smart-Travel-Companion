// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  bookings  Booking[]
  reviews   Review[]
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  country     String
  description String
  image       String
  rating      Float
  categories  String[]
  activities  Activity[]
  cuisines    Cuisine[]
  products    Product[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Activity {
  id          String   @id @default(uuid())
  name        String
  description String
  duration    String
  price       String
  image       String
  rating      Float
  category    String[]
  highlights  String[]
  location    Location @relation(fields: [locationId], references: [id])
  locationId  String
  bookings    Booking[]
  reviews     Review[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cuisine {
  id          String   @id @default(uuid())
  name        String
  description String
  price       String
  image       String
  rating      Float
  location    Location @relation(fields: [locationId], references: [id])
  locationId  String
  restaurants Restaurant[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Restaurant {
  id          String   @id @default(uuid())
  name        String
  address     String
  priceRange  String
  rating      Float
  distance    String
  cuisine     Cuisine  @relation(fields: [cuisineId], references: [id])
  cuisineId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  origin      String
  category    String
  image       String
  history     String
  whereToFind String[]
  price       String
  location    Location @relation(fields: [locationId], references: [id])
  locationId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id          String   @id @default(uuid())
  date        DateTime
  time        String
  adults      Int
  children    Int
  totalPrice  Float
  status      String   @default("pending")
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  activity    Activity @relation(fields: [activityId], references: [id])
  activityId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id          String   @id @default(uuid())
  rating      Float
  comment     String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  activity    Activity @relation(fields: [activityId], references: [id])
  activityId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}